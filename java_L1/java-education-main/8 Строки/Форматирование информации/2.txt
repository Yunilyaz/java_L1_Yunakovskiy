Метод flush() в Java используется в контексте потоков ввода-вывода (I/O) и, в частности, 
в классах, работающих с буферизацией, таких как OutputStream, Writer, BufferedOutputStream, BufferedWriter и других. 

1. Сброс буфера: Когда данные записываются в выходной поток, они часто сначала 
помещаются в буфер для повышения производительности (данные могут не быть сразу отправлены в целевое место)
Метод flush() заставляет систему немедленно записать все данные из буфера в целевое устройство. Это предотвращает потерю данных, 
которые могут остаться в буфере.
2. Гарантия целостности данных: Если программа завершает свою работу или потоки закрываются, и вы не вызывали flush(), 
данные, находящиеся в буфере, могут не быть записаны. Вызов метода flush() обеспечивает, что все предварительно 
записанные данные действительно отправлены и сохранены.
3. Синхронизация: В многопоточных приложениях вызов flush() может также помочь синхронизировать данные между потоками, 
обеспечивая, чтобы все операции записи, произведенные в буфере, были выполнены до выполнения других операций.